version:                          "3"
services:
  mongo:
    image:                        mongo
    restart:                      always
    volumes:
      - ./mongo-db:/data/db
    # environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    networks:
      - default

  mongo-express:
    image:                        mongo-express
    restart:                      always
    ports:
      - 8081:8081
    # environment:
      # ME_CONFIG_MONGODB_ADMINUSERNAME: root
      # ME_CONFIG_MONGODB_ADMINPASSWORD: example

  notifier:
    build:                        .
    restart:                      unless-stopped
    depends_on:
      - mongo
      - mongo-express
    environment:
      AUTHORIZATION:              "token"
      STORAGE_PROVIDER:           "mongodb"
      STORAGE_CONNECTION_STRING:  "mongodb://mongo:27017/stellar-notifier"
      API_PORT:                   4021
      HORIZON:                    "https://horizon-testnet.stellar.org"
      SIGNATURE_SECRET:           "SDBT736EJIIRDC3RSN544NO6OSNMZAWAKRARLOMRP2XJAOGKTQLFFR3V"
      MAX_ACTIVE_SUBSCRIPTIONS:   10000
      NOTIFICATION_CONCURRENCY:   100
      REACTION_RESPONSE_TIMEOUT:  20
      ADMIN_AUTHENTICATION_TOKEN: "98c12910bf35c79a800e9ea893a93b078ea92fc7a26ca76c0cd2f6003464d781"
    ports:
      - "4021:4021"
    networks:
      - default

  testserver:
    build:                        ./testserver
    restart:                      unless-stopped
    depends_on:
      - notifier
    ports:
      - "8991:8991"
    networks:
      - default

  apache:
    build:                        ./testweb
    restart:                      unless-stopped
    ports:
      - "8084:80"
    networks:
      - default

# notes:
# simple test
# curl -G localhost:4021/api/status
#
# build/run docker
# $ docker-compose build
# $ docker-compose up -d
#
# mongo express admin
# http://localhost:8081/
